{"$message_type":"diagnostic","message":"unused variable: `e`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/main.rs","byte_start":593,"byte_end":594,"line_start":19,"line_end":19,"column_start":16,"column_end":17,"is_primary":true,"text":[{"text":"    if let Err(e) = configuration.run() {","highlight_start":16,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_variables)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":593,"byte_end":594,"line_start":19,"line_end":19,"column_start":16,"column_end":17,"is_primary":true,"text":[{"text":"    if let Err(e) = configuration.run() {","highlight_start":16,"highlight_end":17}],"label":null,"suggested_replacement":"_e","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `e`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:19:16\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m19\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    if let Err(e) = configuration.run() {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_e`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unused_variables)]` on by default\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused variable: `err`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/main.rs","byte_start":377,"byte_end":380,"line_start":11,"line_end":11,"column_start":66,"column_end":69,"is_primary":true,"text":[{"text":"    let mut configuration = Config::build(&args).unwrap_or_else(|err| {","highlight_start":66,"highlight_end":69}],"label":"unused variable","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":397,"byte_end":426,"line_start":12,"line_end":12,"column_start":14,"column_end":43,"is_primary":false,"text":[{"text":"        dbg!(\"Problem parsing file! {err}\");","highlight_start":14,"highlight_end":43}],"label":"you might have meant to use string interpolation in this string literal","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/home/delster3/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/macros.rs","byte_start":11131,"byte_end":11154,"line_start":365,"line_end":365,"column_start":35,"column_end":58,"is_primary":false,"text":[{"text":"                $crate::eprintln!(\"[{}:{}:{}] {} = {:#?}\",","highlight_start":35,"highlight_end":58}],"label":"you might have meant to use string interpolation in this string literal","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/main.rs","byte_start":392,"byte_end":427,"line_start":12,"line_end":12,"column_start":9,"column_end":44,"is_primary":false,"text":[{"text":"        dbg!(\"Problem parsing file! {err}\");","highlight_start":9,"highlight_end":44}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"dbg!","def_site_span":{"file_name":"/home/delster3/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/macros.rs","byte_start":10492,"byte_end":10508,"line_start":352,"line_end":352,"column_start":1,"column_end":17,"is_primary":false,"text":[{"text":"macro_rules! dbg {","highlight_start":1,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"string interpolation only works in `format!` invocations","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":397,"byte_end":397,"line_start":12,"line_end":12,"column_start":14,"column_end":14,"is_primary":true,"text":[{"text":"        dbg!(\"Problem parsing file! {err}\");","highlight_start":14,"highlight_end":14}],"label":null,"suggested_replacement":"format!(","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/main.rs","byte_start":426,"byte_end":426,"line_start":12,"line_end":12,"column_start":43,"column_end":43,"is_primary":true,"text":[{"text":"        dbg!(\"Problem parsing file! {err}\");","highlight_start":43,"highlight_end":43}],"label":null,"suggested_replacement":")","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null},{"message":"string interpolation only works in `format!` invocations","code":null,"level":"help","spans":[{"file_name":"/home/delster3/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/macros.rs","byte_start":11131,"byte_end":11131,"line_start":365,"line_end":365,"column_start":35,"column_end":35,"is_primary":true,"text":[{"text":"                $crate::eprintln!(\"[{}:{}:{}] {} = {:#?}\",","highlight_start":35,"highlight_end":35}],"label":null,"suggested_replacement":"format!(","suggestion_applicability":"MachineApplicable","expansion":{"span":{"file_name":"src/main.rs","byte_start":392,"byte_end":427,"line_start":12,"line_end":12,"column_start":9,"column_end":44,"is_primary":false,"text":[{"text":"        dbg!(\"Problem parsing file! {err}\");","highlight_start":9,"highlight_end":44}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"dbg!","def_site_span":{"file_name":"/home/delster3/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/macros.rs","byte_start":10492,"byte_end":10508,"line_start":352,"line_end":352,"column_start":1,"column_end":17,"is_primary":false,"text":[{"text":"macro_rules! dbg {","highlight_start":1,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"/home/delster3/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/macros.rs","byte_start":11154,"byte_end":11154,"line_start":365,"line_end":365,"column_start":58,"column_end":58,"is_primary":true,"text":[{"text":"                $crate::eprintln!(\"[{}:{}:{}] {} = {:#?}\",","highlight_start":58,"highlight_end":58}],"label":null,"suggested_replacement":")","suggestion_applicability":"MachineApplicable","expansion":{"span":{"file_name":"src/main.rs","byte_start":392,"byte_end":427,"line_start":12,"line_end":12,"column_start":9,"column_end":44,"is_primary":false,"text":[{"text":"        dbg!(\"Problem parsing file! {err}\");","highlight_start":9,"highlight_end":44}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"dbg!","def_site_span":{"file_name":"/home/delster3/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/macros.rs","byte_start":10492,"byte_end":10508,"line_start":352,"line_end":352,"column_start":1,"column_end":17,"is_primary":false,"text":[{"text":"macro_rules! dbg {","highlight_start":1,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null},{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":377,"byte_end":380,"line_start":11,"line_end":11,"column_start":66,"column_end":69,"is_primary":true,"text":[{"text":"    let mut configuration = Config::build(&args).unwrap_or_else(|err| {","highlight_start":66,"highlight_end":69}],"label":null,"suggested_replacement":"_err","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `err`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:11:66\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m11\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let mut configuration = Config::build(&args).unwrap_or_else(|err| {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                                 \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33munused variable\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m12\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        dbg!(\"Problem parsing file! {err}\");\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------------------------------\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12myou might have meant to use string interpolation in this string literal\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12myou might have meant to use string interpolation in this string literal\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: string interpolation only works in `format!` invocations\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m12\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        dbg!(\u001b[0m\u001b[0m\u001b[38;5;10mformat!(\u001b[0m\u001b[0m\"Problem parsing file! {err}\"\u001b[0m\u001b[0m\u001b[38;5;10m)\u001b[0m\u001b[0m);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m              \u001b[0m\u001b[0m\u001b[38;5;10m++++++++\u001b[0m\u001b[0m                             \u001b[0m\u001b[0m\u001b[38;5;10m+\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: string interpolation only works in `format!` invocations\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/delster3/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/macros.rs:365:35\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m365| \u001b[0m\u001b[0m                $crate::eprintln!(\u001b[0m\u001b[0m\u001b[38;5;10mformat!(\u001b[0m\u001b[0m\"[{}:{}:{}] {} = {:#?}\"\u001b[0m\u001b[0m\u001b[38;5;10m)\u001b[0m\u001b[0m,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                   \u001b[0m\u001b[0m\u001b[38;5;10m++++++++\u001b[0m\u001b[0m                       \u001b[0m\u001b[0m\u001b[38;5;10m+\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: if this is intentional, prefix it with an underscore\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m11\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    let mut configuration = Config::build(&args).unwrap_or_else(|\u001b[0m\u001b[0m\u001b[38;5;10m_err\u001b[0m\u001b[0m| {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                                  \u001b[0m\u001b[0m\u001b[38;5;10m~~~~\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"2 warnings emitted","code":null,"level":"warning","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: 2 warnings emitted\u001b[0m\n\n"}
